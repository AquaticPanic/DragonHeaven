'use strict';

const RandomTeams = require('../../data/random-teams');
class RandomTeams extends RandomTeams {
	randomTeam(side) {
  
/*pikachulibre: {
		randomBattleMoves: ["volttackle", "knockoff", "extremespeed", "imprisonedstrike"],
		tier: "OU",
	},*/
porygonz: {
		randomBattleMoves: ["thunderbolt", "shadowball", "icebeam", "psyshock"],
		tier: "OU",
	},
  gastrodon: {
		randomBattleMoves: ["scald", "earthpower", "recover", "toxic"],
		tier: "OU",
	},
	pikachu: {
		randomBattleMoves: ["volttackle", "knockoff", "extremespeed", "imprisonedstrike"],
		tier: "OU",
	},
	raichu: {
		randomBattleMoves: ["volttackle", "knockoff", "extremespeed", "imprisonedstrike"],
		tier: "OU",
	},
	pichu: {
		randomBattleMoves: ["volttackle", "knockoff", "extremespeed", "imprisonedstrike"],
		tier: "OU",
	},
	heracross: {
		randomBattleMoves: ["volttackle", "knockoff", "extremespeed", "imprisonedstrike"],
		tier: "OU",
	},
};

// Generate the team randomly.
		let pool = Object.keys(sets);
		for (let i = 0; i < 6; i++) {
			let name = this.sampleNoReplace(pool);
			let set = sets[name];
			set.level = 100;
			set.name = name;
			if (!set.ivs) {
				set.ivs = {hp:31, atk:31, def:31, spa:31, spd:31, spe:31};
			} else {
				for (let iv in {hp:31, atk:31, def:31, spa:31, spd:31, spe:31}) {
					set.ivs[iv] = iv in set.ivs ? set.ivs[iv] : 31;
				}
			}
			// Assuming the hardcoded set evs are all legal.
			if (!set.evs) set.evs = {hp:84, atk:84, def:84, spa:84, spd:84, spe:84};
			set.moves = [this.sampleNoReplace(set.moves), this.sampleNoReplace(set.moves), this.sampleNoReplace(set.moves)].concat(set.signatureMove);
			team.push(set);
		}

		return team;
	}
}
module.exports = RandomTeams;
